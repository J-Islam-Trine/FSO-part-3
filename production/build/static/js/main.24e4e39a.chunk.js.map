{"version":3,"sources":["components/Filter.js","components/Form.js","components/Person.js","services/number.js","App.js","index.js"],"names":["Filter","props","onChange","Form","onSubmit","nameHandler","numberHandler","type","Person","persons","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","error","delete","status","put","Notification","message","textStyle","padding","margin","text","style","color","border","App","useState","setPersons","viewResult","setViewResult","newName","setNewName","newNumber","setNewNumber","notification","setNotification","hook","numberServices","initialData","catch","nullifier","setTimeout","useEffect","e","searchResult","filter","toLowerCase","includes","target","value","length","preventDefault","newPerson","instance","console","log","updatedData","window","confirm","responseStatus","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e4e39a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n\r\n    return (\r\n        <form>\r\n          <div>\r\n              filter shown with <input onChange={props.onChange}/>\r\n            </div>\r\n          </form>\r\n    )\r\n}\r\n\r\nexport default Filter;","import React from 'react' \r\n\r\nconst Form = (props) => {\r\n    //  console.log(props)\r\n\r\n    return(\r\n        <form onSubmit={props.onSubmit}>\r\n        <div>\r\n          name: <input onChange={props.nameHandler}/>\r\n        </div>\r\n        <div>\r\n            number: <input onChange={props.numberHandler}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n\r\n\r\n    return (\r\n        <table>\r\n     <tbody>\r\n     {props.persons.map(\r\n         person => \r\n         <tr key={person.id}>\r\n             <td>{person.name}</td>\r\n             <td>{person.number}</td>\r\n             <td><button onClick={()=> props.onClick(person.id, person.name)}>delete</button></td>\r\n             </tr>)}\r\n     </tbody>\r\n      </table>\r\n    )\r\n}\r\n\r\nexport default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl);\r\n    return req.then(response => response.data)\r\n}\r\n\r\nconst getInfo = () => {\r\n    const req = axios.get(`${baseUrl}/info`);\r\n    return console.log(`<h3>The phonebooks has ${req.count} people's number. ${new Date()}</h3>`);\r\n    // return req.then(res => console.log(`<h3>The phonebooks has ${res.count} people's number. ${new Date()}</h3>`));\r\n}\r\n\r\nconst create = (newObject) => {\r\n   const req =  axios.post(baseUrl, newObject)\r\n    return req.then(response => {\r\n        if (typeof response.data === \"object\")\r\n        {\r\n            return {data: response.data}\r\n        }\r\n        else if (typeof response.data === \"string\")\r\n        {\r\n            return {error: response.data}\r\n        }\r\n    })\r\n}\r\n\r\nconst remove = (id) => {\r\n        const req = axios.delete(`${baseUrl}/${id}`);\r\n        return req.then(response => response.status);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return req.then(response => {\r\n        if (typeof response.data === \"object\")\r\n        {\r\n            return {data: response.data}\r\n        }\r\n        else if (typeof response.data === \"string\")\r\n        {\r\n            return {error: response.data}\r\n        }\r\n    })\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    remove,\r\n    update,\r\n    getInfo\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Filter from './components/Filter'\r\nimport Form from './components/Form'\r\nimport Person from './components/Person'\r\nimport numberServices from './services/number'\r\n\r\n\r\nconst Notification = ({message}) => {\r\n  // console.log(message.message, message.type);\r\n  const notificationStyle = {\r\n    color: \"green\",\r\n    border: \"2px solid\",\r\n    margin: \"5px\"\r\n  }\r\n\r\n  const errorStyle = {\r\n      color: \"red\",\r\n      border: \"2px solid\",\r\n      margin: \"5px\"\r\n    \r\n  }\r\n\r\n  const textStyle = {\r\n    padding: \"5px 5px 5px 10px\",\r\n    margin: \"0px\"\r\n  }\r\n\r\n  \r\n\r\n  if(message.text === null)\r\n  {\r\n    return (\r\n      <> \r\n      </>\r\n    )\r\n  }\r\n  else if (message.type === \"notification\")\r\n  {\r\n    return(\r\n      <div style={notificationStyle}>\r\n       <p style={textStyle}> {message.text}</p>\r\n      </div>\r\n    )\r\n  }\r\n  else if (message.type === \"error\")\r\n  {\r\n    return(\r\n      <div style={errorStyle}>\r\n       <p style={textStyle}> {message.text}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons ] = useState(\r\n      [])\r\n\r\n      const [ viewResult, setViewResult] = useState(persons);\r\n      const [ newName, setNewName ] = useState('')\r\n      const [ newNumber, setNewNumber ] = useState('')\r\n      const [notification, setNotification] = useState({text: null, type: 'notification'});\r\n\r\n      const hook = () => {\r\n            numberServices.getAll()\r\n            .then(initialData => {\r\n              setPersons(initialData);\r\n              setViewResult(initialData);\r\n            })\r\n            .catch(error => {\r\n              // console.log(error);\r\n              setNotification({text: `server offline`, type: \"error\"});\r\n              nullifier();\r\n        });\r\n      }\r\n\r\n      const nullifier = () => {\r\n        setTimeout(()=> {\r\n          setNotification({text: null, type: 'notification'});\r\n          hook();\r\n        }, 3000)\r\n      }\r\n\r\n      useEffect(hook, []);\r\n\r\n      const filterData = (e) => {\r\n        // console.log(e.target.value);\r\n\r\n        let searchResult = persons.filter(person => (person.name.toLowerCase()).includes(e.target.value));\r\n          // console.log(searchResult);\r\n        if(searchResult.length !== 0)\r\n            {\r\n                  setViewResult(searchResult);\r\n            }\r\n            else \r\n            {\r\n              setViewResult(persons)\r\n            }\r\n      }\r\n\r\n      const handleDeletion = (id, name) => {\r\n        console.log(id);\r\n        if (window.confirm(`${name} will be deleted`))\r\n        {\r\n          // console.log(`${id} will be deleted`);\r\n          numberServices.remove(id)\r\n          .then(responseStatus => {\r\n            if (responseStatus === 204)\r\n            {\r\n              hook();\r\n              setNotification({text: `${name} is deleted.`, type: \"notification\"})\r\n              nullifier();\r\n            }\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n            setNotification({text: `${name} has been already deleted from server`, type: \"error\"});\r\n            nullifier();\r\n      });\r\n        }\r\n        else\r\n        {\r\n        console.log('canceled'); \r\n        }\r\n      }\r\n\r\n      const handleNameInput = (e) => {\r\n                setNewName(e.target.value);\r\n      }\r\n\r\n      const handleNumberInput = (e) => {\r\n          setNewNumber(e.target.value);\r\n      }\r\n\r\n      const handleForm = (e) => {\r\n            e.preventDefault();\r\n            // console.log((newPersons.filter(person => person.name === newName)).length);\r\n                  const newPerson = {\r\n                    name: newName, \r\n                    number: newNumber\r\n                  }\r\n                  const instance = persons.filter(person => person.name === newName);\r\n                  console.log(instance)\r\n                  if (instance.length === 0)\r\n                  {\r\n                  numberServices.create(newPerson)\r\n                  .then(updatedData => {\r\n                    console.log(updatedData);\r\n                if (updatedData.data)\r\n                {\r\n                  setNotification({text: `added ${newName} ${newNumber}`, type: \"notification\"});\r\n                }\r\n                else if (updatedData.error)\r\n                {\r\n                  setNotification({text: `${updatedData.error}`, type: \"error\"});\r\n                }\r\n\r\n                nullifier();\r\n\r\n              });\r\n            }\r\n            \r\n                  else if (instance.length === 1)\r\n                  {\r\n                    let id = instance[0].id;\r\n                    numberServices.update(id, newPerson)\r\n                  .then(updatedData => {\r\n                    console.log(updatedData);\r\n                    if (updatedData.data)\r\n                {\r\n                  setNotification({text: `updated ${newName} ${newNumber}`, type: \"notification\"});\r\n                }\r\n                else if (updatedData.error)\r\n                {\r\n                  setNotification({text: `${updatedData.error}`, type: \"error\"});\r\n                }\r\n                nullifier();\r\n\r\n              });\r\n            }\r\n          }\r\n      \r\n    \r\n      return (\r\n        <div>\r\n          <h3>Phonebook</h3>\r\n          <Notification message={notification}/>\r\n          <Filter onChange={filterData} />\r\n          <h3>Add a new</h3>\r\n          <Form onSubmit={handleForm} nameHandler={handleNameInput} numberHandler={handleNumberInput} />\r\n          <h2>Numbers</h2>\r\n          <Person persons={viewResult} onClick={handleDeletion}/>\r\n        </div>\r\n      )\r\n  }\r\n\r\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n"],"sourceRoot":""}